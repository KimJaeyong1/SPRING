<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shenwoo.mapper.BoardMapper">
	
	<!-- 전체 게시글 조회 -->
	<select id="getList" resultType="com.shenwoo.domain.BoardVO">
		<![CDATA[
		select * from tbl_board order by bno desc
		]]>
	</select>
	
	<!-- 특정 게시글 조회 -->
	<select id="getPage" resultType="com.shenwoo.domain.BoardVO">
		select * from tbl_board where bno = #{bno}
	</select>
	
	<!-- 전체 게시글 조회 (페이징) -->
    <select id="getListPaging" resultType="com.shenwoo.domain.BoardVO">
    
    <![CDATA[
        select bno, title, content, writer, regdate, updatedate from(
        select /*+INDEX_DESC(tbl_board pk_board) */ rownum  as rn, bno, title, content, writer, regdate, updatedate 
        from tbl_board where rownum <= #{pageNum} * #{amount} 
    ]]>            
		<if test="keyword != null">
		    <include refid="criteria"></include> 
		</if>
    <![CDATA[
        ) where rn > (#{pageNum} -1) * #{amount}
    ]]>
    
    </select>
    
    <!-- 게시물 총 개숫 -->
    <select id="getTotal" resultType="int">
        select count(*) from tbl_board
        <if test="keyword != null">
			where bno > 0 <include refid="criteria"></include>
        </if>
    </select>  
	
	<!-- 게시판 등록 -->	
	<insert id="register">
		insert into tbl_board(bno, title, content, writer) values (seq_board.nextval, #{title}, #{content}, #{writer})
	</insert>
	
	<!-- 게시판 수정 -->
	<update id="modify">
        update tbl_board set title = #{title}, content = #{content}, updatedate = sysdate where bno = #{bno}
    </update>
    
	<!-- 게시판 삭제 -->
    <delete id="delete">
        delete from tbl_board where bno = #{bno}
    </delete>
	
	<!-- 검색 조건문 -->
    <sql id="criteria">
        <trim prefix="AND (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            title like '%'||#{keyword}||'%' 
                        </when>
                        <when test="type == 'C'.toString()">
                            content like '%'||#{keyword}||'%' 
                        </when>
                        <when test="type == 'W'.toString()">
                            writer like '%'||#{keyword}||'%' 
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>
	
    
    
	
    
	
</mapper>